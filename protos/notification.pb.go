// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: protos/notification.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NotificationChannel int32

const (
	NotificationChannel_NOTIFICATION_CHANNEL_UNSPECIFIED NotificationChannel = 0
	NotificationChannel_NOTIFICATION_CHANNEL_EMAIL       NotificationChannel = 1
	NotificationChannel_NOTIFICATION_CHANNEL_SMS         NotificationChannel = 2
	NotificationChannel_NOTIFICATION_CHANNEL_PUSH        NotificationChannel = 3
	NotificationChannel_NOTIFICATION_CHANNEL_IN_APP      NotificationChannel = 4
	NotificationChannel_NOTIFICATION_CHANNEL_WEBHOOK     NotificationChannel = 5
)

// Enum value maps for NotificationChannel.
var (
	NotificationChannel_name = map[int32]string{
		0: "NOTIFICATION_CHANNEL_UNSPECIFIED",
		1: "NOTIFICATION_CHANNEL_EMAIL",
		2: "NOTIFICATION_CHANNEL_SMS",
		3: "NOTIFICATION_CHANNEL_PUSH",
		4: "NOTIFICATION_CHANNEL_IN_APP",
		5: "NOTIFICATION_CHANNEL_WEBHOOK",
	}
	NotificationChannel_value = map[string]int32{
		"NOTIFICATION_CHANNEL_UNSPECIFIED": 0,
		"NOTIFICATION_CHANNEL_EMAIL":       1,
		"NOTIFICATION_CHANNEL_SMS":         2,
		"NOTIFICATION_CHANNEL_PUSH":        3,
		"NOTIFICATION_CHANNEL_IN_APP":      4,
		"NOTIFICATION_CHANNEL_WEBHOOK":     5,
	}
)

func (x NotificationChannel) Enum() *NotificationChannel {
	p := new(NotificationChannel)
	*p = x
	return p
}

func (x NotificationChannel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationChannel) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_notification_proto_enumTypes[0].Descriptor()
}

func (NotificationChannel) Type() protoreflect.EnumType {
	return &file_protos_notification_proto_enumTypes[0]
}

func (x NotificationChannel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationChannel.Descriptor instead.
func (NotificationChannel) EnumDescriptor() ([]byte, []int) {
	return file_protos_notification_proto_rawDescGZIP(), []int{0}
}

type NotificationStatus int32

const (
	NotificationStatus_NOTIFICATION_STATUS_UNSPECIFIED NotificationStatus = 0
	NotificationStatus_NOTIFICATION_STATUS_PENDING     NotificationStatus = 1
	NotificationStatus_NOTIFICATION_STATUS_SENT        NotificationStatus = 2
	NotificationStatus_NOTIFICATION_STATUS_DELIVERED   NotificationStatus = 3
	NotificationStatus_NOTIFICATION_STATUS_FAILED      NotificationStatus = 4
	NotificationStatus_NOTIFICATION_STATUS_READ        NotificationStatus = 5
)

// Enum value maps for NotificationStatus.
var (
	NotificationStatus_name = map[int32]string{
		0: "NOTIFICATION_STATUS_UNSPECIFIED",
		1: "NOTIFICATION_STATUS_PENDING",
		2: "NOTIFICATION_STATUS_SENT",
		3: "NOTIFICATION_STATUS_DELIVERED",
		4: "NOTIFICATION_STATUS_FAILED",
		5: "NOTIFICATION_STATUS_READ",
	}
	NotificationStatus_value = map[string]int32{
		"NOTIFICATION_STATUS_UNSPECIFIED": 0,
		"NOTIFICATION_STATUS_PENDING":     1,
		"NOTIFICATION_STATUS_SENT":        2,
		"NOTIFICATION_STATUS_DELIVERED":   3,
		"NOTIFICATION_STATUS_FAILED":      4,
		"NOTIFICATION_STATUS_READ":        5,
	}
)

func (x NotificationStatus) Enum() *NotificationStatus {
	p := new(NotificationStatus)
	*p = x
	return p
}

func (x NotificationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_notification_proto_enumTypes[1].Descriptor()
}

func (NotificationStatus) Type() protoreflect.EnumType {
	return &file_protos_notification_proto_enumTypes[1]
}

func (x NotificationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationStatus.Descriptor instead.
func (NotificationStatus) EnumDescriptor() ([]byte, []int) {
	return file_protos_notification_proto_rawDescGZIP(), []int{1}
}

type Notification struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NotificationId string                 `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	TenantContext  *TenantContext         `protobuf:"bytes,2,opt,name=tenant_context,json=tenantContext,proto3" json:"tenant_context,omitempty"`
	RecipientId    string                 `protobuf:"bytes,3,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"`
	Channel        NotificationChannel    `protobuf:"varint,4,opt,name=channel,proto3,enum=notification.NotificationChannel" json:"channel,omitempty"`
	TemplateId     string                 `protobuf:"bytes,5,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	Subject        string                 `protobuf:"bytes,6,opt,name=subject,proto3" json:"subject,omitempty"`
	Content        string                 `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	Status         NotificationStatus     `protobuf:"varint,8,opt,name=status,proto3,enum=notification.NotificationStatus" json:"status,omitempty"`
	Variables      map[string]string      `protobuf:"bytes,9,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Metadata       map[string]string      `protobuf:"bytes,10,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	SentAt         *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=sent_at,json=sentAt,proto3" json:"sent_at,omitempty"`
	DeliveredAt    *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=delivered_at,json=deliveredAt,proto3" json:"delivered_at,omitempty"`
	ReadAt         *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=read_at,json=readAt,proto3" json:"read_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Notification) Reset() {
	*x = Notification{}
	mi := &file_protos_notification_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_protos_notification_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_protos_notification_proto_rawDescGZIP(), []int{0}
}

func (x *Notification) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *Notification) GetTenantContext() *TenantContext {
	if x != nil {
		return x.TenantContext
	}
	return nil
}

func (x *Notification) GetRecipientId() string {
	if x != nil {
		return x.RecipientId
	}
	return ""
}

func (x *Notification) GetChannel() NotificationChannel {
	if x != nil {
		return x.Channel
	}
	return NotificationChannel_NOTIFICATION_CHANNEL_UNSPECIFIED
}

func (x *Notification) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *Notification) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Notification) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Notification) GetStatus() NotificationStatus {
	if x != nil {
		return x.Status
	}
	return NotificationStatus_NOTIFICATION_STATUS_UNSPECIFIED
}

func (x *Notification) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *Notification) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Notification) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Notification) GetSentAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SentAt
	}
	return nil
}

func (x *Notification) GetDeliveredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeliveredAt
	}
	return nil
}

func (x *Notification) GetReadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReadAt
	}
	return nil
}

type NotificationTemplate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TemplateId    string                 `protobuf:"bytes,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	TenantContext *TenantContext         `protobuf:"bytes,2,opt,name=tenant_context,json=tenantContext,proto3" json:"tenant_context,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Subject       string                 `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
	Content       string                 `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	Channel       NotificationChannel    `protobuf:"varint,6,opt,name=channel,proto3,enum=notification.NotificationChannel" json:"channel,omitempty"`
	Variables     []string               `protobuf:"bytes,7,rep,name=variables,proto3" json:"variables,omitempty"`
	Status        Status                 `protobuf:"varint,8,opt,name=status,proto3,enum=types.Status" json:"status,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotificationTemplate) Reset() {
	*x = NotificationTemplate{}
	mi := &file_protos_notification_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationTemplate) ProtoMessage() {}

func (x *NotificationTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_protos_notification_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationTemplate.ProtoReflect.Descriptor instead.
func (*NotificationTemplate) Descriptor() ([]byte, []int) {
	return file_protos_notification_proto_rawDescGZIP(), []int{1}
}

func (x *NotificationTemplate) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *NotificationTemplate) GetTenantContext() *TenantContext {
	if x != nil {
		return x.TenantContext
	}
	return nil
}

func (x *NotificationTemplate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NotificationTemplate) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *NotificationTemplate) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *NotificationTemplate) GetChannel() NotificationChannel {
	if x != nil {
		return x.Channel
	}
	return NotificationChannel_NOTIFICATION_CHANNEL_UNSPECIFIED
}

func (x *NotificationTemplate) GetVariables() []string {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *NotificationTemplate) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

func (x *NotificationTemplate) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *NotificationTemplate) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type SendNotificationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantContext *TenantContext         `protobuf:"bytes,1,opt,name=tenant_context,json=tenantContext,proto3" json:"tenant_context,omitempty"`
	Notification  *Notification          `protobuf:"bytes,2,opt,name=notification,proto3" json:"notification,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendNotificationRequest) Reset() {
	*x = SendNotificationRequest{}
	mi := &file_protos_notification_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationRequest) ProtoMessage() {}

func (x *SendNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_notification_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationRequest.ProtoReflect.Descriptor instead.
func (*SendNotificationRequest) Descriptor() ([]byte, []int) {
	return file_protos_notification_proto_rawDescGZIP(), []int{2}
}

func (x *SendNotificationRequest) GetTenantContext() *TenantContext {
	if x != nil {
		return x.TenantContext
	}
	return nil
}

func (x *SendNotificationRequest) GetNotification() *Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

type SendNotificationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notification  *Notification          `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendNotificationResponse) Reset() {
	*x = SendNotificationResponse{}
	mi := &file_protos_notification_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationResponse) ProtoMessage() {}

func (x *SendNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_notification_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationResponse.ProtoReflect.Descriptor instead.
func (*SendNotificationResponse) Descriptor() ([]byte, []int) {
	return file_protos_notification_proto_rawDescGZIP(), []int{3}
}

func (x *SendNotificationResponse) GetNotification() *Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

func (x *SendNotificationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SendNotificationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetNotificationRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TenantContext  *TenantContext         `protobuf:"bytes,1,opt,name=tenant_context,json=tenantContext,proto3" json:"tenant_context,omitempty"`
	NotificationId string                 `protobuf:"bytes,2,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetNotificationRequest) Reset() {
	*x = GetNotificationRequest{}
	mi := &file_protos_notification_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationRequest) ProtoMessage() {}

func (x *GetNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_notification_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationRequest.ProtoReflect.Descriptor instead.
func (*GetNotificationRequest) Descriptor() ([]byte, []int) {
	return file_protos_notification_proto_rawDescGZIP(), []int{4}
}

func (x *GetNotificationRequest) GetTenantContext() *TenantContext {
	if x != nil {
		return x.TenantContext
	}
	return nil
}

func (x *GetNotificationRequest) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

type GetNotificationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notification  *Notification          `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotificationResponse) Reset() {
	*x = GetNotificationResponse{}
	mi := &file_protos_notification_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationResponse) ProtoMessage() {}

func (x *GetNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_notification_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationResponse.ProtoReflect.Descriptor instead.
func (*GetNotificationResponse) Descriptor() ([]byte, []int) {
	return file_protos_notification_proto_rawDescGZIP(), []int{5}
}

func (x *GetNotificationResponse) GetNotification() *Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

func (x *GetNotificationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetNotificationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListNotificationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantContext *TenantContext         `protobuf:"bytes,1,opt,name=tenant_context,json=tenantContext,proto3" json:"tenant_context,omitempty"`
	Pagination    *PageRequest           `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	RecipientId   string                 `protobuf:"bytes,3,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"`
	ChannelFilter NotificationChannel    `protobuf:"varint,4,opt,name=channel_filter,json=channelFilter,proto3,enum=notification.NotificationChannel" json:"channel_filter,omitempty"`
	StatusFilter  NotificationStatus     `protobuf:"varint,5,opt,name=status_filter,json=statusFilter,proto3,enum=notification.NotificationStatus" json:"status_filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotificationsRequest) Reset() {
	*x = ListNotificationsRequest{}
	mi := &file_protos_notification_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotificationsRequest) ProtoMessage() {}

func (x *ListNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_notification_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotificationsRequest.ProtoReflect.Descriptor instead.
func (*ListNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_protos_notification_proto_rawDescGZIP(), []int{6}
}

func (x *ListNotificationsRequest) GetTenantContext() *TenantContext {
	if x != nil {
		return x.TenantContext
	}
	return nil
}

func (x *ListNotificationsRequest) GetPagination() *PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListNotificationsRequest) GetRecipientId() string {
	if x != nil {
		return x.RecipientId
	}
	return ""
}

func (x *ListNotificationsRequest) GetChannelFilter() NotificationChannel {
	if x != nil {
		return x.ChannelFilter
	}
	return NotificationChannel_NOTIFICATION_CHANNEL_UNSPECIFIED
}

func (x *ListNotificationsRequest) GetStatusFilter() NotificationStatus {
	if x != nil {
		return x.StatusFilter
	}
	return NotificationStatus_NOTIFICATION_STATUS_UNSPECIFIED
}

type ListNotificationsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notifications []*Notification        `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	Pagination    *PageResponse          `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Success       bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotificationsResponse) Reset() {
	*x = ListNotificationsResponse{}
	mi := &file_protos_notification_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotificationsResponse) ProtoMessage() {}

func (x *ListNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_notification_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotificationsResponse.ProtoReflect.Descriptor instead.
func (*ListNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_protos_notification_proto_rawDescGZIP(), []int{7}
}

func (x *ListNotificationsResponse) GetNotifications() []*Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *ListNotificationsResponse) GetPagination() *PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListNotificationsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListNotificationsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type MarkAsReadRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TenantContext  *TenantContext         `protobuf:"bytes,1,opt,name=tenant_context,json=tenantContext,proto3" json:"tenant_context,omitempty"`
	NotificationId string                 `protobuf:"bytes,2,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MarkAsReadRequest) Reset() {
	*x = MarkAsReadRequest{}
	mi := &file_protos_notification_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAsReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAsReadRequest) ProtoMessage() {}

func (x *MarkAsReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_notification_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAsReadRequest.ProtoReflect.Descriptor instead.
func (*MarkAsReadRequest) Descriptor() ([]byte, []int) {
	return file_protos_notification_proto_rawDescGZIP(), []int{8}
}

func (x *MarkAsReadRequest) GetTenantContext() *TenantContext {
	if x != nil {
		return x.TenantContext
	}
	return nil
}

func (x *MarkAsReadRequest) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

type MarkAsReadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkAsReadResponse) Reset() {
	*x = MarkAsReadResponse{}
	mi := &file_protos_notification_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAsReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAsReadResponse) ProtoMessage() {}

func (x *MarkAsReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_notification_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAsReadResponse.ProtoReflect.Descriptor instead.
func (*MarkAsReadResponse) Descriptor() ([]byte, []int) {
	return file_protos_notification_proto_rawDescGZIP(), []int{9}
}

func (x *MarkAsReadResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *MarkAsReadResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CreateTemplateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantContext *TenantContext         `protobuf:"bytes,1,opt,name=tenant_context,json=tenantContext,proto3" json:"tenant_context,omitempty"`
	Template      *NotificationTemplate  `protobuf:"bytes,2,opt,name=template,proto3" json:"template,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTemplateRequest) Reset() {
	*x = CreateTemplateRequest{}
	mi := &file_protos_notification_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTemplateRequest) ProtoMessage() {}

func (x *CreateTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_notification_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTemplateRequest.ProtoReflect.Descriptor instead.
func (*CreateTemplateRequest) Descriptor() ([]byte, []int) {
	return file_protos_notification_proto_rawDescGZIP(), []int{10}
}

func (x *CreateTemplateRequest) GetTenantContext() *TenantContext {
	if x != nil {
		return x.TenantContext
	}
	return nil
}

func (x *CreateTemplateRequest) GetTemplate() *NotificationTemplate {
	if x != nil {
		return x.Template
	}
	return nil
}

type CreateTemplateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Template      *NotificationTemplate  `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTemplateResponse) Reset() {
	*x = CreateTemplateResponse{}
	mi := &file_protos_notification_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTemplateResponse) ProtoMessage() {}

func (x *CreateTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_notification_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTemplateResponse.ProtoReflect.Descriptor instead.
func (*CreateTemplateResponse) Descriptor() ([]byte, []int) {
	return file_protos_notification_proto_rawDescGZIP(), []int{11}
}

func (x *CreateTemplateResponse) GetTemplate() *NotificationTemplate {
	if x != nil {
		return x.Template
	}
	return nil
}

func (x *CreateTemplateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateTemplateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpdateTemplateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantContext *TenantContext         `protobuf:"bytes,1,opt,name=tenant_context,json=tenantContext,proto3" json:"tenant_context,omitempty"`
	TemplateId    string                 `protobuf:"bytes,2,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	Template      *NotificationTemplate  `protobuf:"bytes,3,opt,name=template,proto3" json:"template,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTemplateRequest) Reset() {
	*x = UpdateTemplateRequest{}
	mi := &file_protos_notification_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTemplateRequest) ProtoMessage() {}

func (x *UpdateTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_notification_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTemplateRequest.ProtoReflect.Descriptor instead.
func (*UpdateTemplateRequest) Descriptor() ([]byte, []int) {
	return file_protos_notification_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateTemplateRequest) GetTenantContext() *TenantContext {
	if x != nil {
		return x.TenantContext
	}
	return nil
}

func (x *UpdateTemplateRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *UpdateTemplateRequest) GetTemplate() *NotificationTemplate {
	if x != nil {
		return x.Template
	}
	return nil
}

type UpdateTemplateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Template      *NotificationTemplate  `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTemplateResponse) Reset() {
	*x = UpdateTemplateResponse{}
	mi := &file_protos_notification_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTemplateResponse) ProtoMessage() {}

func (x *UpdateTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_notification_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTemplateResponse.ProtoReflect.Descriptor instead.
func (*UpdateTemplateResponse) Descriptor() ([]byte, []int) {
	return file_protos_notification_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateTemplateResponse) GetTemplate() *NotificationTemplate {
	if x != nil {
		return x.Template
	}
	return nil
}

func (x *UpdateTemplateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateTemplateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListTemplatesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantContext *TenantContext         `protobuf:"bytes,1,opt,name=tenant_context,json=tenantContext,proto3" json:"tenant_context,omitempty"`
	Pagination    *PageRequest           `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	ChannelFilter NotificationChannel    `protobuf:"varint,3,opt,name=channel_filter,json=channelFilter,proto3,enum=notification.NotificationChannel" json:"channel_filter,omitempty"`
	StatusFilter  Status                 `protobuf:"varint,4,opt,name=status_filter,json=statusFilter,proto3,enum=types.Status" json:"status_filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTemplatesRequest) Reset() {
	*x = ListTemplatesRequest{}
	mi := &file_protos_notification_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTemplatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTemplatesRequest) ProtoMessage() {}

func (x *ListTemplatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_notification_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTemplatesRequest.ProtoReflect.Descriptor instead.
func (*ListTemplatesRequest) Descriptor() ([]byte, []int) {
	return file_protos_notification_proto_rawDescGZIP(), []int{14}
}

func (x *ListTemplatesRequest) GetTenantContext() *TenantContext {
	if x != nil {
		return x.TenantContext
	}
	return nil
}

func (x *ListTemplatesRequest) GetPagination() *PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListTemplatesRequest) GetChannelFilter() NotificationChannel {
	if x != nil {
		return x.ChannelFilter
	}
	return NotificationChannel_NOTIFICATION_CHANNEL_UNSPECIFIED
}

func (x *ListTemplatesRequest) GetStatusFilter() Status {
	if x != nil {
		return x.StatusFilter
	}
	return Status_STATUS_UNSPECIFIED
}

type ListTemplatesResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Templates     []*NotificationTemplate `protobuf:"bytes,1,rep,name=templates,proto3" json:"templates,omitempty"`
	Pagination    *PageResponse           `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Success       bool                    `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                  `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTemplatesResponse) Reset() {
	*x = ListTemplatesResponse{}
	mi := &file_protos_notification_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTemplatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTemplatesResponse) ProtoMessage() {}

func (x *ListTemplatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_notification_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTemplatesResponse.ProtoReflect.Descriptor instead.
func (*ListTemplatesResponse) Descriptor() ([]byte, []int) {
	return file_protos_notification_proto_rawDescGZIP(), []int{15}
}

func (x *ListTemplatesResponse) GetTemplates() []*NotificationTemplate {
	if x != nil {
		return x.Templates
	}
	return nil
}

func (x *ListTemplatesResponse) GetPagination() *PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListTemplatesResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListTemplatesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ConfigureChannelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantContext *TenantContext         `protobuf:"bytes,1,opt,name=tenant_context,json=tenantContext,proto3" json:"tenant_context,omitempty"`
	Channel       NotificationChannel    `protobuf:"varint,2,opt,name=channel,proto3,enum=notification.NotificationChannel" json:"channel,omitempty"`
	Configuration map[string]string      `protobuf:"bytes,3,rep,name=configuration,proto3" json:"configuration,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigureChannelRequest) Reset() {
	*x = ConfigureChannelRequest{}
	mi := &file_protos_notification_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigureChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureChannelRequest) ProtoMessage() {}

func (x *ConfigureChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_notification_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureChannelRequest.ProtoReflect.Descriptor instead.
func (*ConfigureChannelRequest) Descriptor() ([]byte, []int) {
	return file_protos_notification_proto_rawDescGZIP(), []int{16}
}

func (x *ConfigureChannelRequest) GetTenantContext() *TenantContext {
	if x != nil {
		return x.TenantContext
	}
	return nil
}

func (x *ConfigureChannelRequest) GetChannel() NotificationChannel {
	if x != nil {
		return x.Channel
	}
	return NotificationChannel_NOTIFICATION_CHANNEL_UNSPECIFIED
}

func (x *ConfigureChannelRequest) GetConfiguration() map[string]string {
	if x != nil {
		return x.Configuration
	}
	return nil
}

type ConfigureChannelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigureChannelResponse) Reset() {
	*x = ConfigureChannelResponse{}
	mi := &file_protos_notification_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigureChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureChannelResponse) ProtoMessage() {}

func (x *ConfigureChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_notification_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureChannelResponse.ProtoReflect.Descriptor instead.
func (*ConfigureChannelResponse) Descriptor() ([]byte, []int) {
	return file_protos_notification_proto_rawDescGZIP(), []int{17}
}

func (x *ConfigureChannelResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ConfigureChannelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_protos_notification_proto protoreflect.FileDescriptor

const file_protos_notification_proto_rawDesc = "" +
	"\n" +
	"\x19protos/notification.proto\x12\fnotification\x1a\x12protos/types.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xd1\x06\n" +
	"\fNotification\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\tR\x0enotificationId\x12;\n" +
	"\x0etenant_context\x18\x02 \x01(\v2\x14.types.TenantContextR\rtenantContext\x12!\n" +
	"\frecipient_id\x18\x03 \x01(\tR\vrecipientId\x12;\n" +
	"\achannel\x18\x04 \x01(\x0e2!.notification.NotificationChannelR\achannel\x12\x1f\n" +
	"\vtemplate_id\x18\x05 \x01(\tR\n" +
	"templateId\x12\x18\n" +
	"\asubject\x18\x06 \x01(\tR\asubject\x12\x18\n" +
	"\acontent\x18\a \x01(\tR\acontent\x128\n" +
	"\x06status\x18\b \x01(\x0e2 .notification.NotificationStatusR\x06status\x12G\n" +
	"\tvariables\x18\t \x03(\v2).notification.Notification.VariablesEntryR\tvariables\x12D\n" +
	"\bmetadata\x18\n" +
	" \x03(\v2(.notification.Notification.MetadataEntryR\bmetadata\x129\n" +
	"\n" +
	"created_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x123\n" +
	"\asent_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\x06sentAt\x12=\n" +
	"\fdelivered_at\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\vdeliveredAt\x123\n" +
	"\aread_at\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\x06readAt\x1a<\n" +
	"\x0eVariablesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb4\x03\n" +
	"\x14NotificationTemplate\x12\x1f\n" +
	"\vtemplate_id\x18\x01 \x01(\tR\n" +
	"templateId\x12;\n" +
	"\x0etenant_context\x18\x02 \x01(\v2\x14.types.TenantContextR\rtenantContext\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x18\n" +
	"\asubject\x18\x04 \x01(\tR\asubject\x12\x18\n" +
	"\acontent\x18\x05 \x01(\tR\acontent\x12;\n" +
	"\achannel\x18\x06 \x01(\x0e2!.notification.NotificationChannelR\achannel\x12\x1c\n" +
	"\tvariables\x18\a \x03(\tR\tvariables\x12%\n" +
	"\x06status\x18\b \x01(\x0e2\r.types.StatusR\x06status\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\x96\x01\n" +
	"\x17SendNotificationRequest\x12;\n" +
	"\x0etenant_context\x18\x01 \x01(\v2\x14.types.TenantContextR\rtenantContext\x12>\n" +
	"\fnotification\x18\x02 \x01(\v2\x1a.notification.NotificationR\fnotification\"\x8e\x01\n" +
	"\x18SendNotificationResponse\x12>\n" +
	"\fnotification\x18\x01 \x01(\v2\x1a.notification.NotificationR\fnotification\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"~\n" +
	"\x16GetNotificationRequest\x12;\n" +
	"\x0etenant_context\x18\x01 \x01(\v2\x14.types.TenantContextR\rtenantContext\x12'\n" +
	"\x0fnotification_id\x18\x02 \x01(\tR\x0enotificationId\"\x8d\x01\n" +
	"\x17GetNotificationResponse\x12>\n" +
	"\fnotification\x18\x01 \x01(\v2\x1a.notification.NotificationR\fnotification\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"\xbf\x02\n" +
	"\x18ListNotificationsRequest\x12;\n" +
	"\x0etenant_context\x18\x01 \x01(\v2\x14.types.TenantContextR\rtenantContext\x122\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x12.types.PageRequestR\n" +
	"pagination\x12!\n" +
	"\frecipient_id\x18\x03 \x01(\tR\vrecipientId\x12H\n" +
	"\x0echannel_filter\x18\x04 \x01(\x0e2!.notification.NotificationChannelR\rchannelFilter\x12E\n" +
	"\rstatus_filter\x18\x05 \x01(\x0e2 .notification.NotificationStatusR\fstatusFilter\"\xc6\x01\n" +
	"\x19ListNotificationsResponse\x12@\n" +
	"\rnotifications\x18\x01 \x03(\v2\x1a.notification.NotificationR\rnotifications\x123\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x13.types.PageResponseR\n" +
	"pagination\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\"y\n" +
	"\x11MarkAsReadRequest\x12;\n" +
	"\x0etenant_context\x18\x01 \x01(\v2\x14.types.TenantContextR\rtenantContext\x12'\n" +
	"\x0fnotification_id\x18\x02 \x01(\tR\x0enotificationId\"H\n" +
	"\x12MarkAsReadResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x94\x01\n" +
	"\x15CreateTemplateRequest\x12;\n" +
	"\x0etenant_context\x18\x01 \x01(\v2\x14.types.TenantContextR\rtenantContext\x12>\n" +
	"\btemplate\x18\x02 \x01(\v2\".notification.NotificationTemplateR\btemplate\"\x8c\x01\n" +
	"\x16CreateTemplateResponse\x12>\n" +
	"\btemplate\x18\x01 \x01(\v2\".notification.NotificationTemplateR\btemplate\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"\xb5\x01\n" +
	"\x15UpdateTemplateRequest\x12;\n" +
	"\x0etenant_context\x18\x01 \x01(\v2\x14.types.TenantContextR\rtenantContext\x12\x1f\n" +
	"\vtemplate_id\x18\x02 \x01(\tR\n" +
	"templateId\x12>\n" +
	"\btemplate\x18\x03 \x01(\v2\".notification.NotificationTemplateR\btemplate\"\x8c\x01\n" +
	"\x16UpdateTemplateResponse\x12>\n" +
	"\btemplate\x18\x01 \x01(\v2\".notification.NotificationTemplateR\btemplate\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"\x85\x02\n" +
	"\x14ListTemplatesRequest\x12;\n" +
	"\x0etenant_context\x18\x01 \x01(\v2\x14.types.TenantContextR\rtenantContext\x122\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x12.types.PageRequestR\n" +
	"pagination\x12H\n" +
	"\x0echannel_filter\x18\x03 \x01(\x0e2!.notification.NotificationChannelR\rchannelFilter\x122\n" +
	"\rstatus_filter\x18\x04 \x01(\x0e2\r.types.StatusR\fstatusFilter\"\xc2\x01\n" +
	"\x15ListTemplatesResponse\x12@\n" +
	"\ttemplates\x18\x01 \x03(\v2\".notification.NotificationTemplateR\ttemplates\x123\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x13.types.PageResponseR\n" +
	"pagination\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\"\xb5\x02\n" +
	"\x17ConfigureChannelRequest\x12;\n" +
	"\x0etenant_context\x18\x01 \x01(\v2\x14.types.TenantContextR\rtenantContext\x12;\n" +
	"\achannel\x18\x02 \x01(\x0e2!.notification.NotificationChannelR\achannel\x12^\n" +
	"\rconfiguration\x18\x03 \x03(\v28.notification.ConfigureChannelRequest.ConfigurationEntryR\rconfiguration\x1a@\n" +
	"\x12ConfigurationEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"N\n" +
	"\x18ConfigureChannelResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage*\xdb\x01\n" +
	"\x13NotificationChannel\x12$\n" +
	" NOTIFICATION_CHANNEL_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aNOTIFICATION_CHANNEL_EMAIL\x10\x01\x12\x1c\n" +
	"\x18NOTIFICATION_CHANNEL_SMS\x10\x02\x12\x1d\n" +
	"\x19NOTIFICATION_CHANNEL_PUSH\x10\x03\x12\x1f\n" +
	"\x1bNOTIFICATION_CHANNEL_IN_APP\x10\x04\x12 \n" +
	"\x1cNOTIFICATION_CHANNEL_WEBHOOK\x10\x05*\xd9\x01\n" +
	"\x12NotificationStatus\x12#\n" +
	"\x1fNOTIFICATION_STATUS_UNSPECIFIED\x10\x00\x12\x1f\n" +
	"\x1bNOTIFICATION_STATUS_PENDING\x10\x01\x12\x1c\n" +
	"\x18NOTIFICATION_STATUS_SENT\x10\x02\x12!\n" +
	"\x1dNOTIFICATION_STATUS_DELIVERED\x10\x03\x12\x1e\n" +
	"\x1aNOTIFICATION_STATUS_FAILED\x10\x04\x12\x1c\n" +
	"\x18NOTIFICATION_STATUS_READ\x10\x052\x86\x06\n" +
	"\x13NotificationService\x12a\n" +
	"\x10SendNotification\x12%.notification.SendNotificationRequest\x1a&.notification.SendNotificationResponse\x12^\n" +
	"\x0fGetNotification\x12$.notification.GetNotificationRequest\x1a%.notification.GetNotificationResponse\x12d\n" +
	"\x11ListNotifications\x12&.notification.ListNotificationsRequest\x1a'.notification.ListNotificationsResponse\x12O\n" +
	"\n" +
	"MarkAsRead\x12\x1f.notification.MarkAsReadRequest\x1a .notification.MarkAsReadResponse\x12[\n" +
	"\x0eCreateTemplate\x12#.notification.CreateTemplateRequest\x1a$.notification.CreateTemplateResponse\x12[\n" +
	"\x0eUpdateTemplate\x12#.notification.UpdateTemplateRequest\x1a$.notification.UpdateTemplateResponse\x12X\n" +
	"\rListTemplates\x12\".notification.ListTemplatesRequest\x1a#.notification.ListTemplatesResponse\x12a\n" +
	"\x10ConfigureChannel\x12%.notification.ConfigureChannelRequest\x1a&.notification.ConfigureChannelResponseB2Z0github.com/mainheartng/marketa_api/protos;protosb\x06proto3"

var (
	file_protos_notification_proto_rawDescOnce sync.Once
	file_protos_notification_proto_rawDescData []byte
)

func file_protos_notification_proto_rawDescGZIP() []byte {
	file_protos_notification_proto_rawDescOnce.Do(func() {
		file_protos_notification_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protos_notification_proto_rawDesc), len(file_protos_notification_proto_rawDesc)))
	})
	return file_protos_notification_proto_rawDescData
}

var file_protos_notification_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_protos_notification_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_protos_notification_proto_goTypes = []any{
	(NotificationChannel)(0),          // 0: notification.NotificationChannel
	(NotificationStatus)(0),           // 1: notification.NotificationStatus
	(*Notification)(nil),              // 2: notification.Notification
	(*NotificationTemplate)(nil),      // 3: notification.NotificationTemplate
	(*SendNotificationRequest)(nil),   // 4: notification.SendNotificationRequest
	(*SendNotificationResponse)(nil),  // 5: notification.SendNotificationResponse
	(*GetNotificationRequest)(nil),    // 6: notification.GetNotificationRequest
	(*GetNotificationResponse)(nil),   // 7: notification.GetNotificationResponse
	(*ListNotificationsRequest)(nil),  // 8: notification.ListNotificationsRequest
	(*ListNotificationsResponse)(nil), // 9: notification.ListNotificationsResponse
	(*MarkAsReadRequest)(nil),         // 10: notification.MarkAsReadRequest
	(*MarkAsReadResponse)(nil),        // 11: notification.MarkAsReadResponse
	(*CreateTemplateRequest)(nil),     // 12: notification.CreateTemplateRequest
	(*CreateTemplateResponse)(nil),    // 13: notification.CreateTemplateResponse
	(*UpdateTemplateRequest)(nil),     // 14: notification.UpdateTemplateRequest
	(*UpdateTemplateResponse)(nil),    // 15: notification.UpdateTemplateResponse
	(*ListTemplatesRequest)(nil),      // 16: notification.ListTemplatesRequest
	(*ListTemplatesResponse)(nil),     // 17: notification.ListTemplatesResponse
	(*ConfigureChannelRequest)(nil),   // 18: notification.ConfigureChannelRequest
	(*ConfigureChannelResponse)(nil),  // 19: notification.ConfigureChannelResponse
	nil,                               // 20: notification.Notification.VariablesEntry
	nil,                               // 21: notification.Notification.MetadataEntry
	nil,                               // 22: notification.ConfigureChannelRequest.ConfigurationEntry
	(*TenantContext)(nil),             // 23: types.TenantContext
	(*timestamppb.Timestamp)(nil),     // 24: google.protobuf.Timestamp
	(Status)(0),                       // 25: types.Status
	(*PageRequest)(nil),               // 26: types.PageRequest
	(*PageResponse)(nil),              // 27: types.PageResponse
}
var file_protos_notification_proto_depIdxs = []int32{
	23, // 0: notification.Notification.tenant_context:type_name -> types.TenantContext
	0,  // 1: notification.Notification.channel:type_name -> notification.NotificationChannel
	1,  // 2: notification.Notification.status:type_name -> notification.NotificationStatus
	20, // 3: notification.Notification.variables:type_name -> notification.Notification.VariablesEntry
	21, // 4: notification.Notification.metadata:type_name -> notification.Notification.MetadataEntry
	24, // 5: notification.Notification.created_at:type_name -> google.protobuf.Timestamp
	24, // 6: notification.Notification.sent_at:type_name -> google.protobuf.Timestamp
	24, // 7: notification.Notification.delivered_at:type_name -> google.protobuf.Timestamp
	24, // 8: notification.Notification.read_at:type_name -> google.protobuf.Timestamp
	23, // 9: notification.NotificationTemplate.tenant_context:type_name -> types.TenantContext
	0,  // 10: notification.NotificationTemplate.channel:type_name -> notification.NotificationChannel
	25, // 11: notification.NotificationTemplate.status:type_name -> types.Status
	24, // 12: notification.NotificationTemplate.created_at:type_name -> google.protobuf.Timestamp
	24, // 13: notification.NotificationTemplate.updated_at:type_name -> google.protobuf.Timestamp
	23, // 14: notification.SendNotificationRequest.tenant_context:type_name -> types.TenantContext
	2,  // 15: notification.SendNotificationRequest.notification:type_name -> notification.Notification
	2,  // 16: notification.SendNotificationResponse.notification:type_name -> notification.Notification
	23, // 17: notification.GetNotificationRequest.tenant_context:type_name -> types.TenantContext
	2,  // 18: notification.GetNotificationResponse.notification:type_name -> notification.Notification
	23, // 19: notification.ListNotificationsRequest.tenant_context:type_name -> types.TenantContext
	26, // 20: notification.ListNotificationsRequest.pagination:type_name -> types.PageRequest
	0,  // 21: notification.ListNotificationsRequest.channel_filter:type_name -> notification.NotificationChannel
	1,  // 22: notification.ListNotificationsRequest.status_filter:type_name -> notification.NotificationStatus
	2,  // 23: notification.ListNotificationsResponse.notifications:type_name -> notification.Notification
	27, // 24: notification.ListNotificationsResponse.pagination:type_name -> types.PageResponse
	23, // 25: notification.MarkAsReadRequest.tenant_context:type_name -> types.TenantContext
	23, // 26: notification.CreateTemplateRequest.tenant_context:type_name -> types.TenantContext
	3,  // 27: notification.CreateTemplateRequest.template:type_name -> notification.NotificationTemplate
	3,  // 28: notification.CreateTemplateResponse.template:type_name -> notification.NotificationTemplate
	23, // 29: notification.UpdateTemplateRequest.tenant_context:type_name -> types.TenantContext
	3,  // 30: notification.UpdateTemplateRequest.template:type_name -> notification.NotificationTemplate
	3,  // 31: notification.UpdateTemplateResponse.template:type_name -> notification.NotificationTemplate
	23, // 32: notification.ListTemplatesRequest.tenant_context:type_name -> types.TenantContext
	26, // 33: notification.ListTemplatesRequest.pagination:type_name -> types.PageRequest
	0,  // 34: notification.ListTemplatesRequest.channel_filter:type_name -> notification.NotificationChannel
	25, // 35: notification.ListTemplatesRequest.status_filter:type_name -> types.Status
	3,  // 36: notification.ListTemplatesResponse.templates:type_name -> notification.NotificationTemplate
	27, // 37: notification.ListTemplatesResponse.pagination:type_name -> types.PageResponse
	23, // 38: notification.ConfigureChannelRequest.tenant_context:type_name -> types.TenantContext
	0,  // 39: notification.ConfigureChannelRequest.channel:type_name -> notification.NotificationChannel
	22, // 40: notification.ConfigureChannelRequest.configuration:type_name -> notification.ConfigureChannelRequest.ConfigurationEntry
	4,  // 41: notification.NotificationService.SendNotification:input_type -> notification.SendNotificationRequest
	6,  // 42: notification.NotificationService.GetNotification:input_type -> notification.GetNotificationRequest
	8,  // 43: notification.NotificationService.ListNotifications:input_type -> notification.ListNotificationsRequest
	10, // 44: notification.NotificationService.MarkAsRead:input_type -> notification.MarkAsReadRequest
	12, // 45: notification.NotificationService.CreateTemplate:input_type -> notification.CreateTemplateRequest
	14, // 46: notification.NotificationService.UpdateTemplate:input_type -> notification.UpdateTemplateRequest
	16, // 47: notification.NotificationService.ListTemplates:input_type -> notification.ListTemplatesRequest
	18, // 48: notification.NotificationService.ConfigureChannel:input_type -> notification.ConfigureChannelRequest
	5,  // 49: notification.NotificationService.SendNotification:output_type -> notification.SendNotificationResponse
	7,  // 50: notification.NotificationService.GetNotification:output_type -> notification.GetNotificationResponse
	9,  // 51: notification.NotificationService.ListNotifications:output_type -> notification.ListNotificationsResponse
	11, // 52: notification.NotificationService.MarkAsRead:output_type -> notification.MarkAsReadResponse
	13, // 53: notification.NotificationService.CreateTemplate:output_type -> notification.CreateTemplateResponse
	15, // 54: notification.NotificationService.UpdateTemplate:output_type -> notification.UpdateTemplateResponse
	17, // 55: notification.NotificationService.ListTemplates:output_type -> notification.ListTemplatesResponse
	19, // 56: notification.NotificationService.ConfigureChannel:output_type -> notification.ConfigureChannelResponse
	49, // [49:57] is the sub-list for method output_type
	41, // [41:49] is the sub-list for method input_type
	41, // [41:41] is the sub-list for extension type_name
	41, // [41:41] is the sub-list for extension extendee
	0,  // [0:41] is the sub-list for field type_name
}

func init() { file_protos_notification_proto_init() }
func file_protos_notification_proto_init() {
	if File_protos_notification_proto != nil {
		return
	}
	file_protos_types_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protos_notification_proto_rawDesc), len(file_protos_notification_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_notification_proto_goTypes,
		DependencyIndexes: file_protos_notification_proto_depIdxs,
		EnumInfos:         file_protos_notification_proto_enumTypes,
		MessageInfos:      file_protos_notification_proto_msgTypes,
	}.Build()
	File_protos_notification_proto = out.File
	file_protos_notification_proto_goTypes = nil
	file_protos_notification_proto_depIdxs = nil
}
