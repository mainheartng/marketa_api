// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: protos/queu.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TicketStatus int32

const (
	TicketStatus_TICKET_STATUS_UNSPECIFIED          TicketStatus = 0
	TicketStatus_TICKET_STATUS_OPEN                 TicketStatus = 1
	TicketStatus_TICKET_STATUS_IN_PROGRESS          TicketStatus = 2
	TicketStatus_TICKET_STATUS_WAITING_FOR_CUSTOMER TicketStatus = 3
	TicketStatus_TICKET_STATUS_RESOLVED             TicketStatus = 4
	TicketStatus_TICKET_STATUS_CLOSED               TicketStatus = 5
)

// Enum value maps for TicketStatus.
var (
	TicketStatus_name = map[int32]string{
		0: "TICKET_STATUS_UNSPECIFIED",
		1: "TICKET_STATUS_OPEN",
		2: "TICKET_STATUS_IN_PROGRESS",
		3: "TICKET_STATUS_WAITING_FOR_CUSTOMER",
		4: "TICKET_STATUS_RESOLVED",
		5: "TICKET_STATUS_CLOSED",
	}
	TicketStatus_value = map[string]int32{
		"TICKET_STATUS_UNSPECIFIED":          0,
		"TICKET_STATUS_OPEN":                 1,
		"TICKET_STATUS_IN_PROGRESS":          2,
		"TICKET_STATUS_WAITING_FOR_CUSTOMER": 3,
		"TICKET_STATUS_RESOLVED":             4,
		"TICKET_STATUS_CLOSED":               5,
	}
)

func (x TicketStatus) Enum() *TicketStatus {
	p := new(TicketStatus)
	*p = x
	return p
}

func (x TicketStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TicketStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_queu_proto_enumTypes[0].Descriptor()
}

func (TicketStatus) Type() protoreflect.EnumType {
	return &file_protos_queu_proto_enumTypes[0]
}

func (x TicketStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TicketStatus.Descriptor instead.
func (TicketStatus) EnumDescriptor() ([]byte, []int) {
	return file_protos_queu_proto_rawDescGZIP(), []int{0}
}

type TicketPriority int32

const (
	TicketPriority_TICKET_PRIORITY_UNSPECIFIED TicketPriority = 0
	TicketPriority_TICKET_PRIORITY_LOW         TicketPriority = 1
	TicketPriority_TICKET_PRIORITY_MEDIUM      TicketPriority = 2
	TicketPriority_TICKET_PRIORITY_HIGH        TicketPriority = 3
	TicketPriority_TICKET_PRIORITY_URGENT      TicketPriority = 4
)

// Enum value maps for TicketPriority.
var (
	TicketPriority_name = map[int32]string{
		0: "TICKET_PRIORITY_UNSPECIFIED",
		1: "TICKET_PRIORITY_LOW",
		2: "TICKET_PRIORITY_MEDIUM",
		3: "TICKET_PRIORITY_HIGH",
		4: "TICKET_PRIORITY_URGENT",
	}
	TicketPriority_value = map[string]int32{
		"TICKET_PRIORITY_UNSPECIFIED": 0,
		"TICKET_PRIORITY_LOW":         1,
		"TICKET_PRIORITY_MEDIUM":      2,
		"TICKET_PRIORITY_HIGH":        3,
		"TICKET_PRIORITY_URGENT":      4,
	}
)

func (x TicketPriority) Enum() *TicketPriority {
	p := new(TicketPriority)
	*p = x
	return p
}

func (x TicketPriority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TicketPriority) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_queu_proto_enumTypes[1].Descriptor()
}

func (TicketPriority) Type() protoreflect.EnumType {
	return &file_protos_queu_proto_enumTypes[1]
}

func (x TicketPriority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TicketPriority.Descriptor instead.
func (TicketPriority) EnumDescriptor() ([]byte, []int) {
	return file_protos_queu_proto_rawDescGZIP(), []int{1}
}

type Ticket struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TicketId        string                 `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	TenantContext   *TenantContext         `protobuf:"bytes,2,opt,name=tenant_context,json=tenantContext,proto3" json:"tenant_context,omitempty"`
	CustomerId      string                 `protobuf:"bytes,3,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	AssignedAgentId string                 `protobuf:"bytes,4,opt,name=assigned_agent_id,json=assignedAgentId,proto3" json:"assigned_agent_id,omitempty"`
	Subject         string                 `protobuf:"bytes,5,opt,name=subject,proto3" json:"subject,omitempty"`
	Description     string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Status          TicketStatus           `protobuf:"varint,7,opt,name=status,proto3,enum=queu.TicketStatus" json:"status,omitempty"`
	Priority        TicketPriority         `protobuf:"varint,8,opt,name=priority,proto3,enum=queu.TicketPriority" json:"priority,omitempty"`
	Category        string                 `protobuf:"bytes,9,opt,name=category,proto3" json:"category,omitempty"`
	Messages        []*TicketMessage       `protobuf:"bytes,10,rep,name=messages,proto3" json:"messages,omitempty"`
	Tags            []*TicketTag           `protobuf:"bytes,11,rep,name=tags,proto3" json:"tags,omitempty"`
	CustomFields    map[string]string      `protobuf:"bytes,12,rep,name=custom_fields,json=customFields,proto3" json:"custom_fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ResolvedAt      *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=resolved_at,json=resolvedAt,proto3" json:"resolved_at,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Ticket) Reset() {
	*x = Ticket{}
	mi := &file_protos_queu_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ticket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticket) ProtoMessage() {}

func (x *Ticket) ProtoReflect() protoreflect.Message {
	mi := &file_protos_queu_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticket.ProtoReflect.Descriptor instead.
func (*Ticket) Descriptor() ([]byte, []int) {
	return file_protos_queu_proto_rawDescGZIP(), []int{0}
}

func (x *Ticket) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *Ticket) GetTenantContext() *TenantContext {
	if x != nil {
		return x.TenantContext
	}
	return nil
}

func (x *Ticket) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *Ticket) GetAssignedAgentId() string {
	if x != nil {
		return x.AssignedAgentId
	}
	return ""
}

func (x *Ticket) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Ticket) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Ticket) GetStatus() TicketStatus {
	if x != nil {
		return x.Status
	}
	return TicketStatus_TICKET_STATUS_UNSPECIFIED
}

func (x *Ticket) GetPriority() TicketPriority {
	if x != nil {
		return x.Priority
	}
	return TicketPriority_TICKET_PRIORITY_UNSPECIFIED
}

func (x *Ticket) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Ticket) GetMessages() []*TicketMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *Ticket) GetTags() []*TicketTag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Ticket) GetCustomFields() map[string]string {
	if x != nil {
		return x.CustomFields
	}
	return nil
}

func (x *Ticket) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Ticket) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Ticket) GetResolvedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ResolvedAt
	}
	return nil
}

type TicketMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	SenderId      string                 `protobuf:"bytes,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	SenderType    string                 `protobuf:"bytes,3,opt,name=sender_type,json=senderType,proto3" json:"sender_type,omitempty"` // customer, agent, system
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Attachments   []*TicketAttachment    `protobuf:"bytes,5,rep,name=attachments,proto3" json:"attachments,omitempty"`
	IsInternal    bool                   `protobuf:"varint,6,opt,name=is_internal,json=isInternal,proto3" json:"is_internal,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TicketMessage) Reset() {
	*x = TicketMessage{}
	mi := &file_protos_queu_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TicketMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketMessage) ProtoMessage() {}

func (x *TicketMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protos_queu_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketMessage.ProtoReflect.Descriptor instead.
func (*TicketMessage) Descriptor() ([]byte, []int) {
	return file_protos_queu_proto_rawDescGZIP(), []int{1}
}

func (x *TicketMessage) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *TicketMessage) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *TicketMessage) GetSenderType() string {
	if x != nil {
		return x.SenderType
	}
	return ""
}

func (x *TicketMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *TicketMessage) GetAttachments() []*TicketAttachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *TicketMessage) GetIsInternal() bool {
	if x != nil {
		return x.IsInternal
	}
	return false
}

func (x *TicketMessage) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type TicketAttachment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AttachmentId  string                 `protobuf:"bytes,1,opt,name=attachment_id,json=attachmentId,proto3" json:"attachment_id,omitempty"`
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	ContentType   string                 `protobuf:"bytes,3,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Url           string                 `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Size          int64                  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TicketAttachment) Reset() {
	*x = TicketAttachment{}
	mi := &file_protos_queu_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TicketAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketAttachment) ProtoMessage() {}

func (x *TicketAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_protos_queu_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketAttachment.ProtoReflect.Descriptor instead.
func (*TicketAttachment) Descriptor() ([]byte, []int) {
	return file_protos_queu_proto_rawDescGZIP(), []int{2}
}

func (x *TicketAttachment) GetAttachmentId() string {
	if x != nil {
		return x.AttachmentId
	}
	return ""
}

func (x *TicketAttachment) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *TicketAttachment) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *TicketAttachment) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *TicketAttachment) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type TicketTag struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TagId         string                 `protobuf:"bytes,1,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Color         string                 `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TicketTag) Reset() {
	*x = TicketTag{}
	mi := &file_protos_queu_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TicketTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketTag) ProtoMessage() {}

func (x *TicketTag) ProtoReflect() protoreflect.Message {
	mi := &file_protos_queu_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketTag.ProtoReflect.Descriptor instead.
func (*TicketTag) Descriptor() ([]byte, []int) {
	return file_protos_queu_proto_rawDescGZIP(), []int{3}
}

func (x *TicketTag) GetTagId() string {
	if x != nil {
		return x.TagId
	}
	return ""
}

func (x *TicketTag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TicketTag) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type QueueStats struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	TotalTickets          int32                  `protobuf:"varint,1,opt,name=total_tickets,json=totalTickets,proto3" json:"total_tickets,omitempty"`
	OpenTickets           int32                  `protobuf:"varint,2,opt,name=open_tickets,json=openTickets,proto3" json:"open_tickets,omitempty"`
	InProgressTickets     int32                  `protobuf:"varint,3,opt,name=in_progress_tickets,json=inProgressTickets,proto3" json:"in_progress_tickets,omitempty"`
	ResolvedTickets       int32                  `protobuf:"varint,4,opt,name=resolved_tickets,json=resolvedTickets,proto3" json:"resolved_tickets,omitempty"`
	AverageResponseTime   float64                `protobuf:"fixed64,5,opt,name=average_response_time,json=averageResponseTime,proto3" json:"average_response_time,omitempty"`
	AverageResolutionTime float64                `protobuf:"fixed64,6,opt,name=average_resolution_time,json=averageResolutionTime,proto3" json:"average_resolution_time,omitempty"`
	TicketsByPriority     map[string]int32       `protobuf:"bytes,7,rep,name=tickets_by_priority,json=ticketsByPriority,proto3" json:"tickets_by_priority,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	TicketsByCategory     map[string]int32       `protobuf:"bytes,8,rep,name=tickets_by_category,json=ticketsByCategory,proto3" json:"tickets_by_category,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *QueueStats) Reset() {
	*x = QueueStats{}
	mi := &file_protos_queu_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueueStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueStats) ProtoMessage() {}

func (x *QueueStats) ProtoReflect() protoreflect.Message {
	mi := &file_protos_queu_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueStats.ProtoReflect.Descriptor instead.
func (*QueueStats) Descriptor() ([]byte, []int) {
	return file_protos_queu_proto_rawDescGZIP(), []int{4}
}

func (x *QueueStats) GetTotalTickets() int32 {
	if x != nil {
		return x.TotalTickets
	}
	return 0
}

func (x *QueueStats) GetOpenTickets() int32 {
	if x != nil {
		return x.OpenTickets
	}
	return 0
}

func (x *QueueStats) GetInProgressTickets() int32 {
	if x != nil {
		return x.InProgressTickets
	}
	return 0
}

func (x *QueueStats) GetResolvedTickets() int32 {
	if x != nil {
		return x.ResolvedTickets
	}
	return 0
}

func (x *QueueStats) GetAverageResponseTime() float64 {
	if x != nil {
		return x.AverageResponseTime
	}
	return 0
}

func (x *QueueStats) GetAverageResolutionTime() float64 {
	if x != nil {
		return x.AverageResolutionTime
	}
	return 0
}

func (x *QueueStats) GetTicketsByPriority() map[string]int32 {
	if x != nil {
		return x.TicketsByPriority
	}
	return nil
}

func (x *QueueStats) GetTicketsByCategory() map[string]int32 {
	if x != nil {
		return x.TicketsByCategory
	}
	return nil
}

// Customer Queue Service Requests/Responses
type CreateTicketRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantContext *TenantContext         `protobuf:"bytes,1,opt,name=tenant_context,json=tenantContext,proto3" json:"tenant_context,omitempty"`
	Ticket        *Ticket                `protobuf:"bytes,2,opt,name=ticket,proto3" json:"ticket,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTicketRequest) Reset() {
	*x = CreateTicketRequest{}
	mi := &file_protos_queu_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketRequest) ProtoMessage() {}

func (x *CreateTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_queu_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketRequest.ProtoReflect.Descriptor instead.
func (*CreateTicketRequest) Descriptor() ([]byte, []int) {
	return file_protos_queu_proto_rawDescGZIP(), []int{5}
}

func (x *CreateTicketRequest) GetTenantContext() *TenantContext {
	if x != nil {
		return x.TenantContext
	}
	return nil
}

func (x *CreateTicketRequest) GetTicket() *Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

type CreateTicketResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ticket        *Ticket                `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTicketResponse) Reset() {
	*x = CreateTicketResponse{}
	mi := &file_protos_queu_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketResponse) ProtoMessage() {}

func (x *CreateTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_queu_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketResponse.ProtoReflect.Descriptor instead.
func (*CreateTicketResponse) Descriptor() ([]byte, []int) {
	return file_protos_queu_proto_rawDescGZIP(), []int{6}
}

func (x *CreateTicketResponse) GetTicket() *Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

func (x *CreateTicketResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateTicketResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetTicketRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantContext *TenantContext         `protobuf:"bytes,1,opt,name=tenant_context,json=tenantContext,proto3" json:"tenant_context,omitempty"`
	TicketId      string                 `protobuf:"bytes,2,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTicketRequest) Reset() {
	*x = GetTicketRequest{}
	mi := &file_protos_queu_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTicketRequest) ProtoMessage() {}

func (x *GetTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_queu_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTicketRequest.ProtoReflect.Descriptor instead.
func (*GetTicketRequest) Descriptor() ([]byte, []int) {
	return file_protos_queu_proto_rawDescGZIP(), []int{7}
}

func (x *GetTicketRequest) GetTenantContext() *TenantContext {
	if x != nil {
		return x.TenantContext
	}
	return nil
}

func (x *GetTicketRequest) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

type GetTicketResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ticket        *Ticket                `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTicketResponse) Reset() {
	*x = GetTicketResponse{}
	mi := &file_protos_queu_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTicketResponse) ProtoMessage() {}

func (x *GetTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_queu_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTicketResponse.ProtoReflect.Descriptor instead.
func (*GetTicketResponse) Descriptor() ([]byte, []int) {
	return file_protos_queu_proto_rawDescGZIP(), []int{8}
}

func (x *GetTicketResponse) GetTicket() *Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

func (x *GetTicketResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetTicketResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpdateTicketRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TenantContext   *TenantContext         `protobuf:"bytes,1,opt,name=tenant_context,json=tenantContext,proto3" json:"tenant_context,omitempty"`
	TicketId        string                 `protobuf:"bytes,2,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Status          TicketStatus           `protobuf:"varint,3,opt,name=status,proto3,enum=queu.TicketStatus" json:"status,omitempty"`
	Priority        TicketPriority         `protobuf:"varint,4,opt,name=priority,proto3,enum=queu.TicketPriority" json:"priority,omitempty"`
	AssignedAgentId string                 `protobuf:"bytes,5,opt,name=assigned_agent_id,json=assignedAgentId,proto3" json:"assigned_agent_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UpdateTicketRequest) Reset() {
	*x = UpdateTicketRequest{}
	mi := &file_protos_queu_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTicketRequest) ProtoMessage() {}

func (x *UpdateTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_queu_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTicketRequest.ProtoReflect.Descriptor instead.
func (*UpdateTicketRequest) Descriptor() ([]byte, []int) {
	return file_protos_queu_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateTicketRequest) GetTenantContext() *TenantContext {
	if x != nil {
		return x.TenantContext
	}
	return nil
}

func (x *UpdateTicketRequest) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *UpdateTicketRequest) GetStatus() TicketStatus {
	if x != nil {
		return x.Status
	}
	return TicketStatus_TICKET_STATUS_UNSPECIFIED
}

func (x *UpdateTicketRequest) GetPriority() TicketPriority {
	if x != nil {
		return x.Priority
	}
	return TicketPriority_TICKET_PRIORITY_UNSPECIFIED
}

func (x *UpdateTicketRequest) GetAssignedAgentId() string {
	if x != nil {
		return x.AssignedAgentId
	}
	return ""
}

type UpdateTicketResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ticket        *Ticket                `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTicketResponse) Reset() {
	*x = UpdateTicketResponse{}
	mi := &file_protos_queu_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTicketResponse) ProtoMessage() {}

func (x *UpdateTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_queu_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTicketResponse.ProtoReflect.Descriptor instead.
func (*UpdateTicketResponse) Descriptor() ([]byte, []int) {
	return file_protos_queu_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateTicketResponse) GetTicket() *Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

func (x *UpdateTicketResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateTicketResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListTicketsRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TenantContext   *TenantContext         `protobuf:"bytes,1,opt,name=tenant_context,json=tenantContext,proto3" json:"tenant_context,omitempty"`
	Pagination      *PageRequest           `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	CustomerId      string                 `protobuf:"bytes,3,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	AssignedAgentId string                 `protobuf:"bytes,4,opt,name=assigned_agent_id,json=assignedAgentId,proto3" json:"assigned_agent_id,omitempty"`
	StatusFilter    TicketStatus           `protobuf:"varint,5,opt,name=status_filter,json=statusFilter,proto3,enum=queu.TicketStatus" json:"status_filter,omitempty"`
	PriorityFilter  TicketPriority         `protobuf:"varint,6,opt,name=priority_filter,json=priorityFilter,proto3,enum=queu.TicketPriority" json:"priority_filter,omitempty"`
	Category        string                 `protobuf:"bytes,7,opt,name=category,proto3" json:"category,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListTicketsRequest) Reset() {
	*x = ListTicketsRequest{}
	mi := &file_protos_queu_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTicketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTicketsRequest) ProtoMessage() {}

func (x *ListTicketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_queu_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTicketsRequest.ProtoReflect.Descriptor instead.
func (*ListTicketsRequest) Descriptor() ([]byte, []int) {
	return file_protos_queu_proto_rawDescGZIP(), []int{11}
}

func (x *ListTicketsRequest) GetTenantContext() *TenantContext {
	if x != nil {
		return x.TenantContext
	}
	return nil
}

func (x *ListTicketsRequest) GetPagination() *PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListTicketsRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *ListTicketsRequest) GetAssignedAgentId() string {
	if x != nil {
		return x.AssignedAgentId
	}
	return ""
}

func (x *ListTicketsRequest) GetStatusFilter() TicketStatus {
	if x != nil {
		return x.StatusFilter
	}
	return TicketStatus_TICKET_STATUS_UNSPECIFIED
}

func (x *ListTicketsRequest) GetPriorityFilter() TicketPriority {
	if x != nil {
		return x.PriorityFilter
	}
	return TicketPriority_TICKET_PRIORITY_UNSPECIFIED
}

func (x *ListTicketsRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type ListTicketsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tickets       []*Ticket              `protobuf:"bytes,1,rep,name=tickets,proto3" json:"tickets,omitempty"`
	Pagination    *PageResponse          `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Success       bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTicketsResponse) Reset() {
	*x = ListTicketsResponse{}
	mi := &file_protos_queu_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTicketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTicketsResponse) ProtoMessage() {}

func (x *ListTicketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_queu_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTicketsResponse.ProtoReflect.Descriptor instead.
func (*ListTicketsResponse) Descriptor() ([]byte, []int) {
	return file_protos_queu_proto_rawDescGZIP(), []int{12}
}

func (x *ListTicketsResponse) GetTickets() []*Ticket {
	if x != nil {
		return x.Tickets
	}
	return nil
}

func (x *ListTicketsResponse) GetPagination() *PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListTicketsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListTicketsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AssignTicketRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantContext *TenantContext         `protobuf:"bytes,1,opt,name=tenant_context,json=tenantContext,proto3" json:"tenant_context,omitempty"`
	TicketId      string                 `protobuf:"bytes,2,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	AgentId       string                 `protobuf:"bytes,3,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignTicketRequest) Reset() {
	*x = AssignTicketRequest{}
	mi := &file_protos_queu_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignTicketRequest) ProtoMessage() {}

func (x *AssignTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_queu_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignTicketRequest.ProtoReflect.Descriptor instead.
func (*AssignTicketRequest) Descriptor() ([]byte, []int) {
	return file_protos_queu_proto_rawDescGZIP(), []int{13}
}

func (x *AssignTicketRequest) GetTenantContext() *TenantContext {
	if x != nil {
		return x.TenantContext
	}
	return nil
}

func (x *AssignTicketRequest) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *AssignTicketRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

type AssignTicketResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ticket        *Ticket                `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignTicketResponse) Reset() {
	*x = AssignTicketResponse{}
	mi := &file_protos_queu_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignTicketResponse) ProtoMessage() {}

func (x *AssignTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_queu_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignTicketResponse.ProtoReflect.Descriptor instead.
func (*AssignTicketResponse) Descriptor() ([]byte, []int) {
	return file_protos_queu_proto_rawDescGZIP(), []int{14}
}

func (x *AssignTicketResponse) GetTicket() *Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

func (x *AssignTicketResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AssignTicketResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AddTicketMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantContext *TenantContext         `protobuf:"bytes,1,opt,name=tenant_context,json=tenantContext,proto3" json:"tenant_context,omitempty"`
	TicketId      string                 `protobuf:"bytes,2,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Message       *TicketMessage         `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTicketMessageRequest) Reset() {
	*x = AddTicketMessageRequest{}
	mi := &file_protos_queu_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTicketMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTicketMessageRequest) ProtoMessage() {}

func (x *AddTicketMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_queu_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTicketMessageRequest.ProtoReflect.Descriptor instead.
func (*AddTicketMessageRequest) Descriptor() ([]byte, []int) {
	return file_protos_queu_proto_rawDescGZIP(), []int{15}
}

func (x *AddTicketMessageRequest) GetTenantContext() *TenantContext {
	if x != nil {
		return x.TenantContext
	}
	return nil
}

func (x *AddTicketMessageRequest) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *AddTicketMessageRequest) GetMessage() *TicketMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type AddTicketMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ticket        *Ticket                `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTicketMessageResponse) Reset() {
	*x = AddTicketMessageResponse{}
	mi := &file_protos_queu_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTicketMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTicketMessageResponse) ProtoMessage() {}

func (x *AddTicketMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_queu_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTicketMessageResponse.ProtoReflect.Descriptor instead.
func (*AddTicketMessageResponse) Descriptor() ([]byte, []int) {
	return file_protos_queu_proto_rawDescGZIP(), []int{16}
}

func (x *AddTicketMessageResponse) GetTicket() *Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

func (x *AddTicketMessageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AddTicketMessageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CloseTicketRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantContext *TenantContext         `protobuf:"bytes,1,opt,name=tenant_context,json=tenantContext,proto3" json:"tenant_context,omitempty"`
	TicketId      string                 `protobuf:"bytes,2,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Resolution    string                 `protobuf:"bytes,3,opt,name=resolution,proto3" json:"resolution,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseTicketRequest) Reset() {
	*x = CloseTicketRequest{}
	mi := &file_protos_queu_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseTicketRequest) ProtoMessage() {}

func (x *CloseTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_queu_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseTicketRequest.ProtoReflect.Descriptor instead.
func (*CloseTicketRequest) Descriptor() ([]byte, []int) {
	return file_protos_queu_proto_rawDescGZIP(), []int{17}
}

func (x *CloseTicketRequest) GetTenantContext() *TenantContext {
	if x != nil {
		return x.TenantContext
	}
	return nil
}

func (x *CloseTicketRequest) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *CloseTicketRequest) GetResolution() string {
	if x != nil {
		return x.Resolution
	}
	return ""
}

type CloseTicketResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ticket        *Ticket                `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseTicketResponse) Reset() {
	*x = CloseTicketResponse{}
	mi := &file_protos_queu_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseTicketResponse) ProtoMessage() {}

func (x *CloseTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_queu_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseTicketResponse.ProtoReflect.Descriptor instead.
func (*CloseTicketResponse) Descriptor() ([]byte, []int) {
	return file_protos_queu_proto_rawDescGZIP(), []int{18}
}

func (x *CloseTicketResponse) GetTicket() *Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

func (x *CloseTicketResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CloseTicketResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetQueueStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantContext *TenantContext         `protobuf:"bytes,1,opt,name=tenant_context,json=tenantContext,proto3" json:"tenant_context,omitempty"`
	StartDate     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQueueStatsRequest) Reset() {
	*x = GetQueueStatsRequest{}
	mi := &file_protos_queu_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueueStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueueStatsRequest) ProtoMessage() {}

func (x *GetQueueStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_queu_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueueStatsRequest.ProtoReflect.Descriptor instead.
func (*GetQueueStatsRequest) Descriptor() ([]byte, []int) {
	return file_protos_queu_proto_rawDescGZIP(), []int{19}
}

func (x *GetQueueStatsRequest) GetTenantContext() *TenantContext {
	if x != nil {
		return x.TenantContext
	}
	return nil
}

func (x *GetQueueStatsRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *GetQueueStatsRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type GetQueueStatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stats         *QueueStats            `protobuf:"bytes,1,opt,name=stats,proto3" json:"stats,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQueueStatsResponse) Reset() {
	*x = GetQueueStatsResponse{}
	mi := &file_protos_queu_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueueStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueueStatsResponse) ProtoMessage() {}

func (x *GetQueueStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_queu_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueueStatsResponse.ProtoReflect.Descriptor instead.
func (*GetQueueStatsResponse) Descriptor() ([]byte, []int) {
	return file_protos_queu_proto_rawDescGZIP(), []int{20}
}

func (x *GetQueueStatsResponse) GetStats() *QueueStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *GetQueueStatsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetQueueStatsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_protos_queu_proto protoreflect.FileDescriptor

const file_protos_queu_proto_rawDesc = "" +
	"\n" +
	"\x11protos/queu.proto\x12\x04queu\x1a\x12protos/types.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xf4\x05\n" +
	"\x06Ticket\x12\x1b\n" +
	"\tticket_id\x18\x01 \x01(\tR\bticketId\x12;\n" +
	"\x0etenant_context\x18\x02 \x01(\v2\x14.types.TenantContextR\rtenantContext\x12\x1f\n" +
	"\vcustomer_id\x18\x03 \x01(\tR\n" +
	"customerId\x12*\n" +
	"\x11assigned_agent_id\x18\x04 \x01(\tR\x0fassignedAgentId\x12\x18\n" +
	"\asubject\x18\x05 \x01(\tR\asubject\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\x12*\n" +
	"\x06status\x18\a \x01(\x0e2\x12.queu.TicketStatusR\x06status\x120\n" +
	"\bpriority\x18\b \x01(\x0e2\x14.queu.TicketPriorityR\bpriority\x12\x1a\n" +
	"\bcategory\x18\t \x01(\tR\bcategory\x12/\n" +
	"\bmessages\x18\n" +
	" \x03(\v2\x13.queu.TicketMessageR\bmessages\x12#\n" +
	"\x04tags\x18\v \x03(\v2\x0f.queu.TicketTagR\x04tags\x12C\n" +
	"\rcustom_fields\x18\f \x03(\v2\x1e.queu.Ticket.CustomFieldsEntryR\fcustomFields\x129\n" +
	"\n" +
	"created_at\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12;\n" +
	"\vresolved_at\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"resolvedAt\x1a?\n" +
	"\x11CustomFieldsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9c\x02\n" +
	"\rTicketMessage\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12\x1b\n" +
	"\tsender_id\x18\x02 \x01(\tR\bsenderId\x12\x1f\n" +
	"\vsender_type\x18\x03 \x01(\tR\n" +
	"senderType\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x128\n" +
	"\vattachments\x18\x05 \x03(\v2\x16.queu.TicketAttachmentR\vattachments\x12\x1f\n" +
	"\vis_internal\x18\x06 \x01(\bR\n" +
	"isInternal\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\x9c\x01\n" +
	"\x10TicketAttachment\x12#\n" +
	"\rattachment_id\x18\x01 \x01(\tR\fattachmentId\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12!\n" +
	"\fcontent_type\x18\x03 \x01(\tR\vcontentType\x12\x10\n" +
	"\x03url\x18\x04 \x01(\tR\x03url\x12\x12\n" +
	"\x04size\x18\x05 \x01(\x03R\x04size\"L\n" +
	"\tTicketTag\x12\x15\n" +
	"\x06tag_id\x18\x01 \x01(\tR\x05tagId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05color\x18\x03 \x01(\tR\x05color\"\xd9\x04\n" +
	"\n" +
	"QueueStats\x12#\n" +
	"\rtotal_tickets\x18\x01 \x01(\x05R\ftotalTickets\x12!\n" +
	"\fopen_tickets\x18\x02 \x01(\x05R\vopenTickets\x12.\n" +
	"\x13in_progress_tickets\x18\x03 \x01(\x05R\x11inProgressTickets\x12)\n" +
	"\x10resolved_tickets\x18\x04 \x01(\x05R\x0fresolvedTickets\x122\n" +
	"\x15average_response_time\x18\x05 \x01(\x01R\x13averageResponseTime\x126\n" +
	"\x17average_resolution_time\x18\x06 \x01(\x01R\x15averageResolutionTime\x12W\n" +
	"\x13tickets_by_priority\x18\a \x03(\v2'.queu.QueueStats.TicketsByPriorityEntryR\x11ticketsByPriority\x12W\n" +
	"\x13tickets_by_category\x18\b \x03(\v2'.queu.QueueStats.TicketsByCategoryEntryR\x11ticketsByCategory\x1aD\n" +
	"\x16TicketsByPriorityEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1aD\n" +
	"\x16TicketsByCategoryEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"x\n" +
	"\x13CreateTicketRequest\x12;\n" +
	"\x0etenant_context\x18\x01 \x01(\v2\x14.types.TenantContextR\rtenantContext\x12$\n" +
	"\x06ticket\x18\x02 \x01(\v2\f.queu.TicketR\x06ticket\"p\n" +
	"\x14CreateTicketResponse\x12$\n" +
	"\x06ticket\x18\x01 \x01(\v2\f.queu.TicketR\x06ticket\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"l\n" +
	"\x10GetTicketRequest\x12;\n" +
	"\x0etenant_context\x18\x01 \x01(\v2\x14.types.TenantContextR\rtenantContext\x12\x1b\n" +
	"\tticket_id\x18\x02 \x01(\tR\bticketId\"m\n" +
	"\x11GetTicketResponse\x12$\n" +
	"\x06ticket\x18\x01 \x01(\v2\f.queu.TicketR\x06ticket\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"\xf9\x01\n" +
	"\x13UpdateTicketRequest\x12;\n" +
	"\x0etenant_context\x18\x01 \x01(\v2\x14.types.TenantContextR\rtenantContext\x12\x1b\n" +
	"\tticket_id\x18\x02 \x01(\tR\bticketId\x12*\n" +
	"\x06status\x18\x03 \x01(\x0e2\x12.queu.TicketStatusR\x06status\x120\n" +
	"\bpriority\x18\x04 \x01(\x0e2\x14.queu.TicketPriorityR\bpriority\x12*\n" +
	"\x11assigned_agent_id\x18\x05 \x01(\tR\x0fassignedAgentId\"p\n" +
	"\x14UpdateTicketResponse\x12$\n" +
	"\x06ticket\x18\x01 \x01(\v2\f.queu.TicketR\x06ticket\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"\xe6\x02\n" +
	"\x12ListTicketsRequest\x12;\n" +
	"\x0etenant_context\x18\x01 \x01(\v2\x14.types.TenantContextR\rtenantContext\x122\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x12.types.PageRequestR\n" +
	"pagination\x12\x1f\n" +
	"\vcustomer_id\x18\x03 \x01(\tR\n" +
	"customerId\x12*\n" +
	"\x11assigned_agent_id\x18\x04 \x01(\tR\x0fassignedAgentId\x127\n" +
	"\rstatus_filter\x18\x05 \x01(\x0e2\x12.queu.TicketStatusR\fstatusFilter\x12=\n" +
	"\x0fpriority_filter\x18\x06 \x01(\x0e2\x14.queu.TicketPriorityR\x0epriorityFilter\x12\x1a\n" +
	"\bcategory\x18\a \x01(\tR\bcategory\"\xa6\x01\n" +
	"\x13ListTicketsResponse\x12&\n" +
	"\atickets\x18\x01 \x03(\v2\f.queu.TicketR\atickets\x123\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x13.types.PageResponseR\n" +
	"pagination\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\"\x8a\x01\n" +
	"\x13AssignTicketRequest\x12;\n" +
	"\x0etenant_context\x18\x01 \x01(\v2\x14.types.TenantContextR\rtenantContext\x12\x1b\n" +
	"\tticket_id\x18\x02 \x01(\tR\bticketId\x12\x19\n" +
	"\bagent_id\x18\x03 \x01(\tR\aagentId\"p\n" +
	"\x14AssignTicketResponse\x12$\n" +
	"\x06ticket\x18\x01 \x01(\v2\f.queu.TicketR\x06ticket\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"\xa2\x01\n" +
	"\x17AddTicketMessageRequest\x12;\n" +
	"\x0etenant_context\x18\x01 \x01(\v2\x14.types.TenantContextR\rtenantContext\x12\x1b\n" +
	"\tticket_id\x18\x02 \x01(\tR\bticketId\x12-\n" +
	"\amessage\x18\x03 \x01(\v2\x13.queu.TicketMessageR\amessage\"t\n" +
	"\x18AddTicketMessageResponse\x12$\n" +
	"\x06ticket\x18\x01 \x01(\v2\f.queu.TicketR\x06ticket\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"\x8e\x01\n" +
	"\x12CloseTicketRequest\x12;\n" +
	"\x0etenant_context\x18\x01 \x01(\v2\x14.types.TenantContextR\rtenantContext\x12\x1b\n" +
	"\tticket_id\x18\x02 \x01(\tR\bticketId\x12\x1e\n" +
	"\n" +
	"resolution\x18\x03 \x01(\tR\n" +
	"resolution\"o\n" +
	"\x13CloseTicketResponse\x12$\n" +
	"\x06ticket\x18\x01 \x01(\v2\f.queu.TicketR\x06ticket\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"\xc5\x01\n" +
	"\x14GetQueueStatsRequest\x12;\n" +
	"\x0etenant_context\x18\x01 \x01(\v2\x14.types.TenantContextR\rtenantContext\x129\n" +
	"\n" +
	"start_date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartDate\x125\n" +
	"\bend_date\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\aendDate\"s\n" +
	"\x15GetQueueStatsResponse\x12&\n" +
	"\x05stats\x18\x01 \x01(\v2\x10.queu.QueueStatsR\x05stats\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage*\xc2\x01\n" +
	"\fTicketStatus\x12\x1d\n" +
	"\x19TICKET_STATUS_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12TICKET_STATUS_OPEN\x10\x01\x12\x1d\n" +
	"\x19TICKET_STATUS_IN_PROGRESS\x10\x02\x12&\n" +
	"\"TICKET_STATUS_WAITING_FOR_CUSTOMER\x10\x03\x12\x1a\n" +
	"\x16TICKET_STATUS_RESOLVED\x10\x04\x12\x18\n" +
	"\x14TICKET_STATUS_CLOSED\x10\x05*\x9c\x01\n" +
	"\x0eTicketPriority\x12\x1f\n" +
	"\x1bTICKET_PRIORITY_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13TICKET_PRIORITY_LOW\x10\x01\x12\x1a\n" +
	"\x16TICKET_PRIORITY_MEDIUM\x10\x02\x12\x18\n" +
	"\x14TICKET_PRIORITY_HIGH\x10\x03\x12\x1a\n" +
	"\x16TICKET_PRIORITY_URGENT\x10\x042\xce\x04\n" +
	"\x14CustomerQueueService\x12E\n" +
	"\fCreateTicket\x12\x19.queu.CreateTicketRequest\x1a\x1a.queu.CreateTicketResponse\x12<\n" +
	"\tGetTicket\x12\x16.queu.GetTicketRequest\x1a\x17.queu.GetTicketResponse\x12E\n" +
	"\fUpdateTicket\x12\x19.queu.UpdateTicketRequest\x1a\x1a.queu.UpdateTicketResponse\x12B\n" +
	"\vListTickets\x12\x18.queu.ListTicketsRequest\x1a\x19.queu.ListTicketsResponse\x12E\n" +
	"\fAssignTicket\x12\x19.queu.AssignTicketRequest\x1a\x1a.queu.AssignTicketResponse\x12Q\n" +
	"\x10AddTicketMessage\x12\x1d.queu.AddTicketMessageRequest\x1a\x1e.queu.AddTicketMessageResponse\x12B\n" +
	"\vCloseTicket\x12\x18.queu.CloseTicketRequest\x1a\x19.queu.CloseTicketResponse\x12H\n" +
	"\rGetQueueStats\x12\x1a.queu.GetQueueStatsRequest\x1a\x1b.queu.GetQueueStatsResponseB2Z0github.com/mainheartng/marketa_api/protos;protosb\x06proto3"

var (
	file_protos_queu_proto_rawDescOnce sync.Once
	file_protos_queu_proto_rawDescData []byte
)

func file_protos_queu_proto_rawDescGZIP() []byte {
	file_protos_queu_proto_rawDescOnce.Do(func() {
		file_protos_queu_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protos_queu_proto_rawDesc), len(file_protos_queu_proto_rawDesc)))
	})
	return file_protos_queu_proto_rawDescData
}

var file_protos_queu_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_protos_queu_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_protos_queu_proto_goTypes = []any{
	(TicketStatus)(0),                // 0: queu.TicketStatus
	(TicketPriority)(0),              // 1: queu.TicketPriority
	(*Ticket)(nil),                   // 2: queu.Ticket
	(*TicketMessage)(nil),            // 3: queu.TicketMessage
	(*TicketAttachment)(nil),         // 4: queu.TicketAttachment
	(*TicketTag)(nil),                // 5: queu.TicketTag
	(*QueueStats)(nil),               // 6: queu.QueueStats
	(*CreateTicketRequest)(nil),      // 7: queu.CreateTicketRequest
	(*CreateTicketResponse)(nil),     // 8: queu.CreateTicketResponse
	(*GetTicketRequest)(nil),         // 9: queu.GetTicketRequest
	(*GetTicketResponse)(nil),        // 10: queu.GetTicketResponse
	(*UpdateTicketRequest)(nil),      // 11: queu.UpdateTicketRequest
	(*UpdateTicketResponse)(nil),     // 12: queu.UpdateTicketResponse
	(*ListTicketsRequest)(nil),       // 13: queu.ListTicketsRequest
	(*ListTicketsResponse)(nil),      // 14: queu.ListTicketsResponse
	(*AssignTicketRequest)(nil),      // 15: queu.AssignTicketRequest
	(*AssignTicketResponse)(nil),     // 16: queu.AssignTicketResponse
	(*AddTicketMessageRequest)(nil),  // 17: queu.AddTicketMessageRequest
	(*AddTicketMessageResponse)(nil), // 18: queu.AddTicketMessageResponse
	(*CloseTicketRequest)(nil),       // 19: queu.CloseTicketRequest
	(*CloseTicketResponse)(nil),      // 20: queu.CloseTicketResponse
	(*GetQueueStatsRequest)(nil),     // 21: queu.GetQueueStatsRequest
	(*GetQueueStatsResponse)(nil),    // 22: queu.GetQueueStatsResponse
	nil,                              // 23: queu.Ticket.CustomFieldsEntry
	nil,                              // 24: queu.QueueStats.TicketsByPriorityEntry
	nil,                              // 25: queu.QueueStats.TicketsByCategoryEntry
	(*TenantContext)(nil),            // 26: types.TenantContext
	(*timestamppb.Timestamp)(nil),    // 27: google.protobuf.Timestamp
	(*PageRequest)(nil),              // 28: types.PageRequest
	(*PageResponse)(nil),             // 29: types.PageResponse
}
var file_protos_queu_proto_depIdxs = []int32{
	26, // 0: queu.Ticket.tenant_context:type_name -> types.TenantContext
	0,  // 1: queu.Ticket.status:type_name -> queu.TicketStatus
	1,  // 2: queu.Ticket.priority:type_name -> queu.TicketPriority
	3,  // 3: queu.Ticket.messages:type_name -> queu.TicketMessage
	5,  // 4: queu.Ticket.tags:type_name -> queu.TicketTag
	23, // 5: queu.Ticket.custom_fields:type_name -> queu.Ticket.CustomFieldsEntry
	27, // 6: queu.Ticket.created_at:type_name -> google.protobuf.Timestamp
	27, // 7: queu.Ticket.updated_at:type_name -> google.protobuf.Timestamp
	27, // 8: queu.Ticket.resolved_at:type_name -> google.protobuf.Timestamp
	4,  // 9: queu.TicketMessage.attachments:type_name -> queu.TicketAttachment
	27, // 10: queu.TicketMessage.created_at:type_name -> google.protobuf.Timestamp
	24, // 11: queu.QueueStats.tickets_by_priority:type_name -> queu.QueueStats.TicketsByPriorityEntry
	25, // 12: queu.QueueStats.tickets_by_category:type_name -> queu.QueueStats.TicketsByCategoryEntry
	26, // 13: queu.CreateTicketRequest.tenant_context:type_name -> types.TenantContext
	2,  // 14: queu.CreateTicketRequest.ticket:type_name -> queu.Ticket
	2,  // 15: queu.CreateTicketResponse.ticket:type_name -> queu.Ticket
	26, // 16: queu.GetTicketRequest.tenant_context:type_name -> types.TenantContext
	2,  // 17: queu.GetTicketResponse.ticket:type_name -> queu.Ticket
	26, // 18: queu.UpdateTicketRequest.tenant_context:type_name -> types.TenantContext
	0,  // 19: queu.UpdateTicketRequest.status:type_name -> queu.TicketStatus
	1,  // 20: queu.UpdateTicketRequest.priority:type_name -> queu.TicketPriority
	2,  // 21: queu.UpdateTicketResponse.ticket:type_name -> queu.Ticket
	26, // 22: queu.ListTicketsRequest.tenant_context:type_name -> types.TenantContext
	28, // 23: queu.ListTicketsRequest.pagination:type_name -> types.PageRequest
	0,  // 24: queu.ListTicketsRequest.status_filter:type_name -> queu.TicketStatus
	1,  // 25: queu.ListTicketsRequest.priority_filter:type_name -> queu.TicketPriority
	2,  // 26: queu.ListTicketsResponse.tickets:type_name -> queu.Ticket
	29, // 27: queu.ListTicketsResponse.pagination:type_name -> types.PageResponse
	26, // 28: queu.AssignTicketRequest.tenant_context:type_name -> types.TenantContext
	2,  // 29: queu.AssignTicketResponse.ticket:type_name -> queu.Ticket
	26, // 30: queu.AddTicketMessageRequest.tenant_context:type_name -> types.TenantContext
	3,  // 31: queu.AddTicketMessageRequest.message:type_name -> queu.TicketMessage
	2,  // 32: queu.AddTicketMessageResponse.ticket:type_name -> queu.Ticket
	26, // 33: queu.CloseTicketRequest.tenant_context:type_name -> types.TenantContext
	2,  // 34: queu.CloseTicketResponse.ticket:type_name -> queu.Ticket
	26, // 35: queu.GetQueueStatsRequest.tenant_context:type_name -> types.TenantContext
	27, // 36: queu.GetQueueStatsRequest.start_date:type_name -> google.protobuf.Timestamp
	27, // 37: queu.GetQueueStatsRequest.end_date:type_name -> google.protobuf.Timestamp
	6,  // 38: queu.GetQueueStatsResponse.stats:type_name -> queu.QueueStats
	7,  // 39: queu.CustomerQueueService.CreateTicket:input_type -> queu.CreateTicketRequest
	9,  // 40: queu.CustomerQueueService.GetTicket:input_type -> queu.GetTicketRequest
	11, // 41: queu.CustomerQueueService.UpdateTicket:input_type -> queu.UpdateTicketRequest
	13, // 42: queu.CustomerQueueService.ListTickets:input_type -> queu.ListTicketsRequest
	15, // 43: queu.CustomerQueueService.AssignTicket:input_type -> queu.AssignTicketRequest
	17, // 44: queu.CustomerQueueService.AddTicketMessage:input_type -> queu.AddTicketMessageRequest
	19, // 45: queu.CustomerQueueService.CloseTicket:input_type -> queu.CloseTicketRequest
	21, // 46: queu.CustomerQueueService.GetQueueStats:input_type -> queu.GetQueueStatsRequest
	8,  // 47: queu.CustomerQueueService.CreateTicket:output_type -> queu.CreateTicketResponse
	10, // 48: queu.CustomerQueueService.GetTicket:output_type -> queu.GetTicketResponse
	12, // 49: queu.CustomerQueueService.UpdateTicket:output_type -> queu.UpdateTicketResponse
	14, // 50: queu.CustomerQueueService.ListTickets:output_type -> queu.ListTicketsResponse
	16, // 51: queu.CustomerQueueService.AssignTicket:output_type -> queu.AssignTicketResponse
	18, // 52: queu.CustomerQueueService.AddTicketMessage:output_type -> queu.AddTicketMessageResponse
	20, // 53: queu.CustomerQueueService.CloseTicket:output_type -> queu.CloseTicketResponse
	22, // 54: queu.CustomerQueueService.GetQueueStats:output_type -> queu.GetQueueStatsResponse
	47, // [47:55] is the sub-list for method output_type
	39, // [39:47] is the sub-list for method input_type
	39, // [39:39] is the sub-list for extension type_name
	39, // [39:39] is the sub-list for extension extendee
	0,  // [0:39] is the sub-list for field type_name
}

func init() { file_protos_queu_proto_init() }
func file_protos_queu_proto_init() {
	if File_protos_queu_proto != nil {
		return
	}
	file_protos_types_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protos_queu_proto_rawDesc), len(file_protos_queu_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_queu_proto_goTypes,
		DependencyIndexes: file_protos_queu_proto_depIdxs,
		EnumInfos:         file_protos_queu_proto_enumTypes,
		MessageInfos:      file_protos_queu_proto_msgTypes,
	}.Build()
	File_protos_queu_proto = out.File
	file_protos_queu_proto_goTypes = nil
	file_protos_queu_proto_depIdxs = nil
}
